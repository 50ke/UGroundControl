// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_mission_item.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_msg_5fmission_5fitem_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_msg_5fmission_5fitem_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "msg_enum.pb.h"
#include "msg_command.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_msg_5fmission_5fitem_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_msg_5fmission_5fitem_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_msg_5fmission_5fitem_2eproto;
namespace UsvLink {
class MissionItem;
struct MissionItemDefaultTypeInternal;
extern MissionItemDefaultTypeInternal _MissionItem_default_instance_;
}  // namespace UsvLink
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace UsvLink {

// ===================================================================


// -------------------------------------------------------------------

class MissionItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UsvLink.MissionItem) */ {
 public:
  inline MissionItem() : MissionItem(nullptr) {}
  ~MissionItem() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MissionItem(::google::protobuf::internal::ConstantInitialized);

  inline MissionItem(const MissionItem& from)
      : MissionItem(nullptr, from) {}
  MissionItem(MissionItem&& from) noexcept
    : MissionItem() {
    *this = ::std::move(from);
  }

  inline MissionItem& operator=(const MissionItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MissionItem& operator=(MissionItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MissionItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MissionItem* internal_default_instance() {
    return reinterpret_cast<const MissionItem*>(
               &_MissionItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MissionItem& a, MissionItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MissionItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MissionItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MissionItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MissionItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MissionItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MissionItem& from) {
    MissionItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MissionItem* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "UsvLink.MissionItem";
  }
  protected:
  explicit MissionItem(::google::protobuf::Arena* arena);
  MissionItem(::google::protobuf::Arena* arena, const MissionItem& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandFieldNumber = 8,
    kSeqFieldNumber = 1,
    kFrameFieldNumber = 2,
    kCurrentFieldNumber = 3,
    kAutoContinueFieldNumber = 4,
    kXFieldNumber = 5,
    kYFieldNumber = 6,
    kZFieldNumber = 7,
  };
  // .UsvLink.Command command = 8;
  bool has_command() const;
  void clear_command() ;
  const ::UsvLink::Command& command() const;
  PROTOBUF_NODISCARD ::UsvLink::Command* release_command();
  ::UsvLink::Command* mutable_command();
  void set_allocated_command(::UsvLink::Command* value);
  void unsafe_arena_set_allocated_command(::UsvLink::Command* value);
  ::UsvLink::Command* unsafe_arena_release_command();

  private:
  const ::UsvLink::Command& _internal_command() const;
  ::UsvLink::Command* _internal_mutable_command();

  public:
  // int32 seq = 1;
  void clear_seq() ;
  ::int32_t seq() const;
  void set_seq(::int32_t value);

  private:
  ::int32_t _internal_seq() const;
  void _internal_set_seq(::int32_t value);

  public:
  // .UsvLink.Frame frame = 2;
  void clear_frame() ;
  ::UsvLink::Frame frame() const;
  void set_frame(::UsvLink::Frame value);

  private:
  ::UsvLink::Frame _internal_frame() const;
  void _internal_set_frame(::UsvLink::Frame value);

  public:
  // bool current = 3;
  void clear_current() ;
  bool current() const;
  void set_current(bool value);

  private:
  bool _internal_current() const;
  void _internal_set_current(bool value);

  public:
  // bool auto_continue = 4;
  void clear_auto_continue() ;
  bool auto_continue() const;
  void set_auto_continue(bool value);

  private:
  bool _internal_auto_continue() const;
  void _internal_set_auto_continue(bool value);

  public:
  // float x = 5;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 6;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float z = 7;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:UsvLink.MissionItem)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::UsvLink::Command* command_;
    ::int32_t seq_;
    int frame_;
    bool current_;
    bool auto_continue_;
    float x_;
    float y_;
    float z_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_msg_5fmission_5fitem_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MissionItem

// int32 seq = 1;
inline void MissionItem::clear_seq() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.seq_ = 0;
}
inline ::int32_t MissionItem::seq() const {
  // @@protoc_insertion_point(field_get:UsvLink.MissionItem.seq)
  return _internal_seq();
}
inline void MissionItem::set_seq(::int32_t value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:UsvLink.MissionItem.seq)
}
inline ::int32_t MissionItem::_internal_seq() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.seq_;
}
inline void MissionItem::_internal_set_seq(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.seq_ = value;
}

// .UsvLink.Frame frame = 2;
inline void MissionItem::clear_frame() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.frame_ = 0;
}
inline ::UsvLink::Frame MissionItem::frame() const {
  // @@protoc_insertion_point(field_get:UsvLink.MissionItem.frame)
  return _internal_frame();
}
inline void MissionItem::set_frame(::UsvLink::Frame value) {
  _internal_set_frame(value);
  // @@protoc_insertion_point(field_set:UsvLink.MissionItem.frame)
}
inline ::UsvLink::Frame MissionItem::_internal_frame() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::UsvLink::Frame>(_impl_.frame_);
}
inline void MissionItem::_internal_set_frame(::UsvLink::Frame value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.frame_ = value;
}

// bool current = 3;
inline void MissionItem::clear_current() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.current_ = false;
}
inline bool MissionItem::current() const {
  // @@protoc_insertion_point(field_get:UsvLink.MissionItem.current)
  return _internal_current();
}
inline void MissionItem::set_current(bool value) {
  _internal_set_current(value);
  // @@protoc_insertion_point(field_set:UsvLink.MissionItem.current)
}
inline bool MissionItem::_internal_current() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_;
}
inline void MissionItem::_internal_set_current(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_ = value;
}

// bool auto_continue = 4;
inline void MissionItem::clear_auto_continue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.auto_continue_ = false;
}
inline bool MissionItem::auto_continue() const {
  // @@protoc_insertion_point(field_get:UsvLink.MissionItem.auto_continue)
  return _internal_auto_continue();
}
inline void MissionItem::set_auto_continue(bool value) {
  _internal_set_auto_continue(value);
  // @@protoc_insertion_point(field_set:UsvLink.MissionItem.auto_continue)
}
inline bool MissionItem::_internal_auto_continue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.auto_continue_;
}
inline void MissionItem::_internal_set_auto_continue(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.auto_continue_ = value;
}

// float x = 5;
inline void MissionItem::clear_x() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.x_ = 0;
}
inline float MissionItem::x() const {
  // @@protoc_insertion_point(field_get:UsvLink.MissionItem.x)
  return _internal_x();
}
inline void MissionItem::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:UsvLink.MissionItem.x)
}
inline float MissionItem::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void MissionItem::_internal_set_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// float y = 6;
inline void MissionItem::clear_y() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.y_ = 0;
}
inline float MissionItem::y() const {
  // @@protoc_insertion_point(field_get:UsvLink.MissionItem.y)
  return _internal_y();
}
inline void MissionItem::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:UsvLink.MissionItem.y)
}
inline float MissionItem::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void MissionItem::_internal_set_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// float z = 7;
inline void MissionItem::clear_z() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.z_ = 0;
}
inline float MissionItem::z() const {
  // @@protoc_insertion_point(field_get:UsvLink.MissionItem.z)
  return _internal_z();
}
inline void MissionItem::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:UsvLink.MissionItem.z)
}
inline float MissionItem::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void MissionItem::_internal_set_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// .UsvLink.Command command = 8;
inline bool MissionItem::has_command() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.command_ != nullptr);
  return value;
}
inline const ::UsvLink::Command& MissionItem::_internal_command() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::UsvLink::Command* p = _impl_.command_;
  return p != nullptr ? *p : reinterpret_cast<const ::UsvLink::Command&>(::UsvLink::_Command_default_instance_);
}
inline const ::UsvLink::Command& MissionItem::command() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:UsvLink.MissionItem.command)
  return _internal_command();
}
inline void MissionItem::unsafe_arena_set_allocated_command(::UsvLink::Command* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.command_);
  }
  _impl_.command_ = reinterpret_cast<::UsvLink::Command*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:UsvLink.MissionItem.command)
}
inline ::UsvLink::Command* MissionItem::release_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::UsvLink::Command* released = _impl_.command_;
  _impl_.command_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::UsvLink::Command* MissionItem::unsafe_arena_release_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:UsvLink.MissionItem.command)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::UsvLink::Command* temp = _impl_.command_;
  _impl_.command_ = nullptr;
  return temp;
}
inline ::UsvLink::Command* MissionItem::_internal_mutable_command() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.command_ == nullptr) {
    auto* p = CreateMaybeMessage<::UsvLink::Command>(GetArena());
    _impl_.command_ = reinterpret_cast<::UsvLink::Command*>(p);
  }
  return _impl_.command_;
}
inline ::UsvLink::Command* MissionItem::mutable_command() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::UsvLink::Command* _msg = _internal_mutable_command();
  // @@protoc_insertion_point(field_mutable:UsvLink.MissionItem.command)
  return _msg;
}
inline void MissionItem::set_allocated_command(::UsvLink::Command* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.command_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.command_ = reinterpret_cast<::UsvLink::Command*>(value);
  // @@protoc_insertion_point(field_set_allocated:UsvLink.MissionItem.command)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace UsvLink


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_msg_5fmission_5fitem_2eproto_2epb_2eh
